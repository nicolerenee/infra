---
fullnameOverride: "vm"

# -- VictoriaMetrics Operator dependency chart configuration. More values can be found [here](https://docs.victoriametrics.com/helm/victoriametrics-operator#parameters). Also checkout [here](https://docs.victoriametrics.com/operator/vars) possible ENV variables to configure operator behaviour
victoria-metrics-operator:
  enabled: true
  # don't deploy crds, they are deployed by operator-crds chart
  crds:
    enabled: false
    plain: false
  operator:
    # -- Enables ownership reference for converted prometheus-operator objects,
    # it will remove corresponding victoria-metrics objects in case of deletion prometheus one.
    enable_converter_ownership: true
    # -- Enables custom config-reloader, bundled with operator.
    # It should reduce  vmagent and vmauth config sync-time and make it predictable.
    useCustomConfigReloader: true

# deploy a single node victoria metrics instance
vmsingle:
  enabled: true
  # -- Full spec for VMSingle CRD. Allowed values describe [here](https://docs.victoriametrics.com/operator/api#vmsinglespec)
  spec:
    retentionPeriod: "120d"
    storage:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 40Gi

defaultDashboards:
  enabled: true
  grafanaOperator:
    enabled: true

grafana:
  enabled: false
  forceDeployDatasource: true

defaultDatasources:
  grafanaOperator:
    enabled: true

vmalert:
  enabled: true
  spec:
    extraArgs:
      external.url: "https://vmalert.${CLUSTER_DOMAIN}"

alertmanager:
  config:
    route:
      receiver: "blackhole"
      group_by: ["alertgroup", "job"]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      routes:
        # default route
        - matchers:
            - severity=~"info|warning|critical"
          receiver: discord-infra-alerts
          continue: true

    inhibit_rules:
      - target_matchers:
          - severity=~"warning|info"
        source_matchers:
          - severity=critical
        equal:
          - cluster
          - namespace
          - alertname
      - target_matchers:
          - severity=info
        source_matchers:
          - severity=warning
        equal:
          - cluster
          - namespace
          - alertname
      - target_matchers:
          - severity=info
        source_matchers:
          - alertname=InfoInhibitor
        equal:
          - cluster
          - namespace

    receivers:
      - name: blackhole
      - name: discord-infra-alerts
        discord_configs:
          - send_resolved: true
            webhook_url: "${SECRET_DISCORD_INFRA_ALERTS_WEBHOOK}"
            title: '{{ template "discord.default.title" . }}'
            username: "AlertManager - ${CLUSTER_NAME}"
  enabled: true
  spec:
    externalURL: "https://alertmanager.${CLUSTER_DOMAIN}"

kubeControllerManager:
  enabled: true
  vmScrape:
    spec:
      jobLabel: jobLabel
      namespaceSelector:
        matchNames:
          - kube-system
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            # caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # don't check cert since talos isn't using the k8s CA for this
            insecureSkipVerify: true

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: true
  vmScrape:
    spec:
      jobLabel: jobLabel
      namespaceSelector:
        matchNames:
          - kube-system
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            # caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # don't check cert since talos isn't using the k8s CA for this
            insecureSkipVerify: true

kubeProxy:
  enabled: false

kubelet:
  enabled: true
  vmScrape:
    kind: VMNodeScrape
    spec:
      scheme: "https"
      honorLabels: true
      interval: "30s"
      scrapeTimeout: "5s"
      tlsConfig:
        insecureSkipVerify: true
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      # drop high cardinality label and useless metrics for cadvisor and kubelet
      metricRelabelConfigs:
        - action: labeldrop
          regex: (uid)
        - action: labeldrop
          regex: (id|name)
        - action: drop
          source_labels: [__name__]
          regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
      relabelConfigs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - action: labeldrop
          regex: (.*_node_kubevirt_io_.*|feature_node_kubernetes_io_.*)
        - sourceLabels: [__metrics_path__]
          targetLabel: metrics_path
        - targetLabel: job
          replacement: kubelet
      # ignore timestamps of cadvisor's metrics by default
      # more info here https://github.com/VictoriaMetrics/VictoriaMetrics/issues/4697#issuecomment-1656540535
      honorTimestamps: false
