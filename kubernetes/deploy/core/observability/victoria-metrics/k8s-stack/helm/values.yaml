---
fullnameOverride: "vm"

# -- VictoriaMetrics Operator dependency chart configuration. More values can be found [here](https://docs.victoriametrics.com/helm/victoriametrics-operator#parameters). Also checkout [here](https://docs.victoriametrics.com/operator/vars) possible ENV variables to configure operator behaviour
victoria-metrics-operator:
  enabled: true
  # don't deploy crds, they are deployed by operator-crds chart
  crds:
    enabled: false
    plain: false
  operator:
    # -- Enables ownership reference for converted prometheus-operator objects,
    # it will remove corresponding victoria-metrics objects in case of deletion prometheus one.
    enable_converter_ownership: true
    # -- Enables custom config-reloader, bundled with operator.
    # It should reduce  vmagent and vmauth config sync-time and make it predictable.
    useCustomConfigReloader: true

# deploy a single node victoria metrics instance
vmsingle:
  enabled: true
  # -- Full spec for VMSingle CRD. Allowed values describe [here](https://docs.victoriametrics.com/operator/api#vmsinglespec)
  spec:
    retentionPeriod: "120d"
    storage:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 40Gi
  ingress:
    enabled: true
    ingressClassName: tailscale
    hosts:
      - vm-${CLUSTER_NAME}
    tls:
      - hosts:
          - vm-${CLUSTER_NAME}

defaultDashboards:
  enabled: true
  grafanaOperator:
    enabled: false

defaultDatasources:
  grafanaOperator:
    enabled: true

alertmanager:
  enabled: true
  spec:
    externalURL: "https://alertmgr-${CLUSTER_NAME}.hummingbird-perch.ts.net"

  # -- (object) Alertmanager ingress configuration
  ingress:
    enabled: true
    ingressClassName: tailscale
    hosts:
      - alertmgr-${CLUSTER_NAME}
    tls:
      - hosts:
          - alertmgr-${CLUSTER_NAME}

grafana:
  enabled: false

kubeControllerManager:
  enabled: true
  vmScrape:
    spec:
      jobLabel: jobLabel
      namespaceSelector:
        matchNames:
          - kube-system
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            # caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # don't check cert since talos isn't using the k8s CA for this
            insecureSkipVerify: true

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: true
  vmScrape:
    spec:
      jobLabel: jobLabel
      namespaceSelector:
        matchNames:
          - kube-system
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            # caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            # don't check cert since talos isn't using the k8s CA for this
            insecureSkipVerify: true

kubeProxy:
  enabled: false
