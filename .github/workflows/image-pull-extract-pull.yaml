---
name: Image Pull Extract

on:
  workflow_call:
    inputs:
      cluster:
        required: true
        type: string
      runner:
        description: "The runner to perform the image pull on"
        default: "ubuntu-latest"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}-${{ inputs.cluster }}
  cancel-in-progress: true

jobs:
  extract:
    name: Image Pull - Extract Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ["default", "pull"]
      fail-fast: false
    outputs:
      default: ${{ steps.extract.outputs.default }}
      pull: ${{ steps.extract.outputs.pull }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ matrix.branch == 'default' && github.event.repository.default_branch || '' }}

      - name: Gather Images
        uses: docker://ghcr.io/allenporter/flux-local:v7.6.0
        with:
          args: >-
            get cluster
            --all-namespaces
            --path /github/workspace/kubernetes/clusters/${{ inputs.cluster }}/flux
            --enable-images
            --only-images
            --output json
            --output-file images.json

      - name: Extract Images
        id: extract
        run: |
          echo "${{ matrix.branch }}=$(jq --compact-output '.' images.json)" >> $GITHUB_OUTPUT

          echo '## Branch ${{ matrix.branch }} images' >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          jq '.' images.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  diff:
    if: ${{ needs.extract.outputs.default != needs.extract.outputs.pull }}
    needs: extract
    name: Image Pull - Diff Images
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.diff.outputs.images }}
    steps:
      - name: Diff Images
        id: diff
        run: |
          images=$(jq --compact-output --null-input \
              --argjson f1 '${{ needs.extract.outputs.default }}' \
              --argjson f2 '${{ needs.extract.outputs.pull }}' \
              '$f2 - $f1' \
          )
          echo "images=${images}" >> $GITHUB_OUTPUT

          echo '## New images to Pull' >> $GITHUB_STEP_SUMMARY
          echo '```json' >> $GITHUB_STEP_SUMMARY
          echo $images | jq >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  pull:
    if: ${{ needs.diff.outputs.images != '[]' }}
    needs: diff
    name: Image Pull - Pull Images
    runs-on: ${{ inputs.runner }}
    strategy:
      matrix:
        image: ${{ fromJSON(needs.diff.outputs.images) }}
      max-parallel: 4
      fail-fast: false
    steps:
      # TODO: reenable once all new images are built that can be verified
      # - name: Attest
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   run: |
      #     case "${{ matrix.image }}" in
      #       *home-operations*)
      #         gh attestation verify --owner home-operations oci://${{ matrix.image }} ;;
      #     esac

      - name: Install talosctl
        run: curl -fsSL https://talos.dev/install | sh

      - name: Pull Image
        run: talosctl --nodes $NODE image pull ${{ matrix.image }}
